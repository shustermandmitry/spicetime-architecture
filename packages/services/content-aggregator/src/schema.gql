""" 
Aggregator Service Schema:
Provides operations to retrieve data from multiple services and aggregate results.
"""
schema {
  query: Query
}

"""
Queries available in the aggregator.
"""
type Query {
  """
  Aggregates data from multiple services and creates a combined result.
  """
  aggregateData(input: AggregateInput!): AggregateResult!
}

"""
Input for the aggregateData query.
"""
input AggregateInput {
  """
  List of service identifiers to fetch and aggregate data from.
  """
  serviceIds: [String!]!

  """
  Optional filter criteria to be applied on the aggregated data.
  """
  filter: String
}

"""
Result of the aggregateData query.
"""
type AggregateResult {
  """
  Unique request identifier for tracking this aggregation task.
  """
  requestId: ID!

  """
  Aggregated data from the requested services.
  """
  data: [AggregatedItem!]!

  """
  Metadata about the aggregation process (e.g., processing time).
  """
  metadata: AggregationMetadata
}

"""
Representation of a single item in the aggregated data.
"""
type AggregatedItem {
  """
  Identifier of the data source (service).
  """
  source: String!

  """
  Data fetched from this source.
  """
  content: String!
}

"""
Metadata about the aggregation result.
"""
type AggregationMetadata {
  """
  Total number of services processed.
  """
  serviceCount: Int!

  """
  Time (in milliseconds) taken to process the aggregation.
  """
  processingTimeMs: Int
}